# 参考ページ
# - https://www.tohoho-web.com/python/index.html
# 
# 実行方法：fn + f5


# * ---------------------------------------------------------- * #
# Hello world!
# ポイント：Python3.0だと括弧で囲まないとエラーになる
print("Hello world!")

# * ---------------------------------------------------------- * #
# 文・式
# 改行コード入れなくても、print文分けると改行してくれる。Rubyはしてくれなかった気がする。
print("Hello")
print("world!")

# ポイント：;で文を区切ることができる
a = 1; b = 2; c = a + b
print(c) #3

# ポイント：文を数行に分けるバックスラッシュ\
total = 245 +   \
        231 +   \
        3
print(total) #479

# ポイント：行列やリストを改行する時はカンマ(,)で改行すればいい
num_list = [1,2,3,
            4,5,6,
            7,8,9] 
print(num_list) #[1, 2, 3, 4, 5, 6, 7, 8, 9]

# * ---------------------------------------------------------- * #
# コメント(#)
# ポイント：バックスラッシュ改行している行にコメントをつけることはできない
#total = 245 +   \　#ダメな例
#        231 +   \
#        3

# * ---------------------------------------------------------- * #
# インデント
# ポイント：Pythonはインデントで条件分岐、繰り返しの処理を区切っている
#         インデントは半角空白4文字。
#         しかし、コード内で半角空白かTabのどちらかで統一しないとTabErrorになる
#         TabError: inconsistent use of tabs and spaces in indentation 

a = 1; b = 2
if a <= b:
    print(a)
    a += 1
print("a:" + str(a))
print("b:" + str(b))

# * ---------------------------------------------------------- * #
# エンコードルール(coding:)
# スクリプトの1行目か2行目に coding[=:]\s*([-\w.]+) にマッチするコメントが記述されていると、
# スクリプトが指定されたエンコードルール(文字セット)で記述されているものとみなします。
# Python 2 で日本語を扱う場合は必須でしたが、Python 3 では記載が無い場合は utf-8 とみなすようになりました。

# coding: Shift_JIS
# coding: EUC-JP
# coding: cp932
# coding: utf-8

# * ---------------------------------------------------------- * #
# print文
# ポイント：引数をカンマで複数指定すると引数ごとに半角スペースで区切って表示してくれる
print("でけえねこ","でっけえでっけえ","でけえねこ","——3点") #でけえねこ でっけえでっけえ でけえねこ ——3点

# ポイント：print文を分けると改行できる
print("でけえねこ")
print("でっけえでっけえ")
print("でけえねこ")
print("——3点")

#でけえねこ
#でっけえでっけえ
#でけえねこ
#——3点

# ポイント：end="" を指定することでprint文を分けていても改行無しにできる
#         ただし単一printでカンマ区切りの場合と異なり文字列同士が半角スペースで区切られない
print("でけえねこ",end="")
print("でっけえでっけえ",end="")
print("でけえねこ",end="")
print("——3点")
# でけえねこでっけえでっけえでけえねこ——3点

# ポイント：end="hoge" って語尾ってことか！defaulfが改行(crlf?)ってだけで
print("でけえねこ",end="にゃ")
print("でっけえでっけえ",end="にゃ")
print("でけえねこ",end="にゃ")
print("——3点")

# でけえねこにゃでっけえでっけえにゃでけえねこにゃ——3点
# 変な語尾ザウルスが作れるね

# ポイント：Printでフォーマット指定をする。汎用性高そう
print("私の名前は %s です." %"田中太郎") #%sでString指定
print("%sの年齢は %d歳です" %("田中太郎",3))
print("%(name)sの年齢は %(age)d歳です" %{'name': "田中太郎","age": 3}) #辞書型がいっちゃんわかりやすい

# たとえば辞書型を使う場合だと変数で外付けしておくこともできる
# どちらがみやすいかと言われたらどっちもどっちな気がする。情報量が多い場合は変数に切り分けた方がいいかも
user_data = {'name': "田中太郎","age": 3}
print("%(name)sの年齢は %(age)d歳です" %user_data)

# ポイント：Python3.0以降での標準出力以外での出力。要はファイルに出力する場合
# open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)
f_001_001_sample = open("001_001_sample.txt", "w")

print("Hello world!", file=f_001_001_sample) # 001_001_sample.txtに出力

f_001_001_sample.close()

# * ---------------------------------------------------------- * #
